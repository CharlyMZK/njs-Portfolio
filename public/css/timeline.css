.timeline {
  position: relative;
  padding: 21px 0px 10px;
  margin-top: 4px;
  margin-bottom: 30px;
}

.timeline .line {
  position: absolute;
  width: 4px;
  display: block;
  background: currentColor;
  top: 0px;
  bottom: 0px;
  margin-left: 30px;
}

.timeline .separator {
  border-top: 1px solid currentColor;
  padding: 5px;
  padding-left: 40px;
  font-style: italic;
  font-size: .9em;
  margin-left: 30px;
}

.timeline .line::before {
  top: -4px;
}

.timeline .line::after {
  bottom: -4px;
}

.timeline .line::before,
.timeline .line::after {
  content: '';
  position: absolute;
  left: -4px;
  width: 12px;
  height: 12px;
  display: block;
  border-radius: 50%;
  background: currentColor;
}

.timeline .panel {
  position: relative;
  margin: 10px 0px 21px 70px;
  clear: both;
}

.timeline .panel::before {
  position: absolute;
  display: block;
  top: 8px;
  left: -24px;
  content: '';
  width: 0px;
  height: 0px;
  border: inherit;
  border-width: 12px;
  border-top-color: transparent;
  border-bottom-color: transparent;
  border-left-color: transparent;
}

.timeline .panel .panel-heading.icon * {
  font-size: 20px;
  vertical-align: middle;
  line-height: 40px;
}

.timeline .panel .panel-heading.icon {
  position: absolute;
  left: -59px;
  display: block;
  width: 40px;
  height: 40px;
  padding: 0px;
  border-radius: 50%;
  text-align: center;
  float: left;
}

.timeline .panel-outline {
  border-color: transparent;
  background: transparent;
  box-shadow: none;
}

.timeline .panel-outline .panel-body {
  padding: 10px 0px;
}

.timeline .panel-outline .panel-heading:not(.icon),
.timeline .panel-outline .panel-footer {
  display: none;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvY3NzL0M6L3dhbXA2NC93d3cvcG9ydGZvbGlvL2Fzc2V0cy9jc3MvQzovd2FtcDY0L3d3dy9wb3J0Zm9saW8vYXNzZXRzL2Nzcy90aW1lbGluZS5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9jc3MvdGltZWxpbmUuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0NDQ0g7O0FERUQ7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtDQ0NIOztBREVEO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0NDQ0g7O0FERUQ7RUFBMEI7Q0NFekI7O0FERFM7RUFBZTtDQ0t4Qjs7QURKRDs7RUFFSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0NDT0g7O0FESkQ7RUFDSTtFQUNBO0VBQ0E7Q0NPSDs7QURKRDtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtDQ09IOztBREpEO0VBQXlDO0VBQWtCO0VBQXlCO0NDVW5GOztBRFREO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0NDWUg7O0FEVEQ7RUFDSTtFQUNBO0VBQ0E7Q0NZSDs7QURURDtFQUNJO0NDWUg7O0FEVEQ7O0VBRUk7Q0NZSCIsImZpbGUiOiJ0aW1lbGluZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGltZWxpbmUge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgcGFkZGluZzogMjFweCAwcHggMTBweDtcclxuICAgIG1hcmdpbi10b3A6IDRweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbn1cclxuXHJcbi50aW1lbGluZSAubGluZSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB3aWR0aDogNHB4O1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBiYWNrZ3JvdW5kOiBjdXJyZW50Q29sb3I7XHJcbiAgICB0b3A6IDBweDtcclxuICAgIGJvdHRvbTogMHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDMwcHg7XHJcbn1cclxuXHJcbi50aW1lbGluZSAuc2VwYXJhdG9yIHtcclxuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCBjdXJyZW50Q29sb3I7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDQwcHg7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgICBmb250LXNpemU6IC45ZW07XHJcbiAgICBtYXJnaW4tbGVmdDogMzBweDtcclxufVxyXG5cclxuLnRpbWVsaW5lIC5saW5lOjpiZWZvcmUgeyB0b3A6IC00cHg7IH1cclxuLnRpbWVsaW5lIC5saW5lOjphZnRlciB7IGJvdHRvbTogLTRweDsgfVxyXG4udGltZWxpbmUgLmxpbmU6OmJlZm9yZSxcclxuLnRpbWVsaW5lIC5saW5lOjphZnRlciB7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IC00cHg7XHJcbiAgICB3aWR0aDogMTJweDtcclxuICAgIGhlaWdodDogMTJweDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgYmFja2dyb3VuZDogY3VycmVudENvbG9yO1xyXG59XHJcblxyXG4udGltZWxpbmUgLnBhbmVsIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG1hcmdpbjogMTBweCAwcHggMjFweCA3MHB4O1xyXG4gICAgY2xlYXI6IGJvdGg7XHJcbn1cclxuXHJcbi50aW1lbGluZSAucGFuZWw6OmJlZm9yZSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHRvcDogOHB4O1xyXG4gICAgbGVmdDogLTI0cHg7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIHdpZHRoOiAwcHg7XHJcbiAgICBoZWlnaHQ6IDBweDtcclxuICAgIGJvcmRlcjogaW5oZXJpdDtcclxuICAgIGJvcmRlci13aWR0aDogMTJweDtcclxuICAgIGJvcmRlci10b3AtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItbGVmdC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbi50aW1lbGluZSAucGFuZWwgLnBhbmVsLWhlYWRpbmcuaWNvbiAqIHsgZm9udC1zaXplOiAyMHB4OyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBsaW5lLWhlaWdodDogNDBweDsgfVxyXG4udGltZWxpbmUgLnBhbmVsIC5wYW5lbC1oZWFkaW5nLmljb24ge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogLTU5cHg7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbn1cclxuXHJcbi50aW1lbGluZSAucGFuZWwtb3V0bGluZSB7XHJcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgICBib3gtc2hhZG93OiBub25lO1xyXG59XHJcblxyXG4udGltZWxpbmUgLnBhbmVsLW91dGxpbmUgLnBhbmVsLWJvZHkge1xyXG4gICAgcGFkZGluZzogMTBweCAwcHg7XHJcbn1cclxuXHJcbi50aW1lbGluZSAucGFuZWwtb3V0bGluZSAucGFuZWwtaGVhZGluZzpub3QoLmljb24pLFxyXG4udGltZWxpbmUgLnBhbmVsLW91dGxpbmUgLnBhbmVsLWZvb3RlciB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXNzZXRzL2Nzcy9DOi93YW1wNjQvd3d3L3BvcnRmb2xpby9hc3NldHMvY3NzL0M6L3dhbXA2NC93d3cvcG9ydGZvbGlvL2Fzc2V0cy9jc3MvdGltZWxpbmUuc2NzcyIsIi50aW1lbGluZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMjFweCAwcHggMTBweDtcbiAgbWFyZ2luLXRvcDogNHB4O1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xufVxuXG4udGltZWxpbmUgLmxpbmUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiA0cHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBiYWNrZ3JvdW5kOiBjdXJyZW50Q29sb3I7XG4gIHRvcDogMHB4O1xuICBib3R0b206IDBweDtcbiAgbWFyZ2luLWxlZnQ6IDMwcHg7XG59XG5cbi50aW1lbGluZSAuc2VwYXJhdG9yIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIGN1cnJlbnRDb2xvcjtcbiAgcGFkZGluZzogNXB4O1xuICBwYWRkaW5nLWxlZnQ6IDQwcHg7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgZm9udC1zaXplOiAuOWVtO1xuICBtYXJnaW4tbGVmdDogMzBweDtcbn1cblxuLnRpbWVsaW5lIC5saW5lOjpiZWZvcmUge1xuICB0b3A6IC00cHg7XG59XG5cbi50aW1lbGluZSAubGluZTo6YWZ0ZXIge1xuICBib3R0b206IC00cHg7XG59XG5cbi50aW1lbGluZSAubGluZTo6YmVmb3JlLFxuLnRpbWVsaW5lIC5saW5lOjphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IC00cHg7XG4gIHdpZHRoOiAxMnB4O1xuICBoZWlnaHQ6IDEycHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQ6IGN1cnJlbnRDb2xvcjtcbn1cblxuLnRpbWVsaW5lIC5wYW5lbCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luOiAxMHB4IDBweCAyMXB4IDcwcHg7XG4gIGNsZWFyOiBib3RoO1xufVxuXG4udGltZWxpbmUgLnBhbmVsOjpiZWZvcmUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0b3A6IDhweDtcbiAgbGVmdDogLTI0cHg7XG4gIGNvbnRlbnQ6ICcnO1xuICB3aWR0aDogMHB4O1xuICBoZWlnaHQ6IDBweDtcbiAgYm9yZGVyOiBpbmhlcml0O1xuICBib3JkZXItd2lkdGg6IDEycHg7XG4gIGJvcmRlci10b3AtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXItYm90dG9tLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWxlZnQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4udGltZWxpbmUgLnBhbmVsIC5wYW5lbC1oZWFkaW5nLmljb24gKiB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgbGluZS1oZWlnaHQ6IDQwcHg7XG59XG5cbi50aW1lbGluZSAucGFuZWwgLnBhbmVsLWhlYWRpbmcuaWNvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogLTU5cHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogNDBweDtcbiAgaGVpZ2h0OiA0MHB4O1xuICBwYWRkaW5nOiAwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmbG9hdDogbGVmdDtcbn1cblxuLnRpbWVsaW5lIC5wYW5lbC1vdXRsaW5lIHtcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG59XG5cbi50aW1lbGluZSAucGFuZWwtb3V0bGluZSAucGFuZWwtYm9keSB7XG4gIHBhZGRpbmc6IDEwcHggMHB4O1xufVxuXG4udGltZWxpbmUgLnBhbmVsLW91dGxpbmUgLnBhbmVsLWhlYWRpbmc6bm90KC5pY29uKSxcbi50aW1lbGluZSAucGFuZWwtb3V0bGluZSAucGFuZWwtZm9vdGVyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXNzZXRzL2Nzcy90aW1lbGluZS5zY3NzIl0sInNvdXJjZVJvb3QiOiIifQ==*/